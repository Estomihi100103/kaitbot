"""create tables for document, doc_embedding, url_company, web_embedding

Revision ID: ba79370560ac
Revises: 917b68b11ef1
Create Date: 2025-08-06 21:31:22.821095

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import pgvector



# revision identifiers, used by Alembic.
revision: str = 'ba79370560ac'
down_revision: Union[str, Sequence[str], None] = '917b68b11ef1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('file_type', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('keywords_search', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.create_table('url_companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_url_companies_id'), 'url_companies', ['id'], unique=False)
    op.create_index(op.f('ix_url_companies_url'), 'url_companies', ['url'], unique=False)
    op.create_table('doc_embeddings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chunk_content', sa.Text(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=False),
    sa.Column('extractmetadata', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_doc_embeddings_id'), 'doc_embeddings', ['id'], unique=False)
    op.create_table('web_embeddings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('url_company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['url_company_id'], ['url_companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_web_embeddings_id'), 'web_embeddings', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_web_embeddings_id'), table_name='web_embeddings')
    op.drop_table('web_embeddings')
    op.drop_index(op.f('ix_doc_embeddings_id'), table_name='doc_embeddings')
    op.drop_table('doc_embeddings')
    op.drop_index(op.f('ix_url_companies_url'), table_name='url_companies')
    op.drop_index(op.f('ix_url_companies_id'), table_name='url_companies')
    op.drop_table('url_companies')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_table('documents')
    # ### end Alembic commands ###
